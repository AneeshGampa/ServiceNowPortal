<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function() {
  /* widget controller */
  var c = this;
	$rootScope.hasRequestsOrApprovals = c.data.request.hasAny || c.data.approvals.hasAny;
	this.KEYS = {
						DOWN:40,
						LEFT:37,
						RIGHT:39,
						TAB:9,
						UP:38
					 };

	$scope.show_request = true;
	$scope.changePanel = function(panel_name) {
		if ($scope.show_request) {
			if (panel_name == 'approval')
				$scope.show_request = false;
		} else {
			if (panel_name == 'request')
				$scope.show_request = true;
		}
		/*****Start Left->Right bottom border style*****/
		var requestSlider = angular.element( document.querySelector( '.request-slider' ) );
		var approvalSlider = angular.element( document.querySelector( '.approval-slider' ) );
		if (panel_name == 'approval') {
			approvalSlider.addClass('active-slider');
			requestSlider.removeClass('active-slider');
		}
		else if (panel_name == 'request'){
			requestSlider.addClass('active-slider');
			approvalSlider.removeClass('active-slider');
		}
		/*****End Left->Right bottom border style*****/		
	};
	if (c.data.showApprovals)
		spUtil.recordWatch($scope, "sysapproval_approver", "state=requested^approverIN" +  $scope.data.approvals.myApprovals.toString());
	
	function get() {
		spUtil.update($scope);
	}

	$scope.approve = function(id) {
		$scope.data.op = "approved";
		$scope.data.target = id;
		get();
	};

	$scope.reject = function(id) {
		$scope.data.op = "rejected";
		$scope.data.target = id;
		get();
	};
	
	$scope.switchTab = function($event, tab) {
		var key = null;
		if (event.keyCode === c.KEYS.LEFT || event.keyCode === c.KEYS.UP)
			key = c.KEYS.LEFT;
		else if (event.keyCode === c.KEYS.RIGHT || event.keyCode === c.KEYS.DOWN)
			key = c.KEYS.RIGHT;
		else if (event.keyCode === c.KEYS.TAB) {
			return;
		}
		if (key === null)
			return;
	
		if (!c.data.approvals.hasAny)
			return;
		$scope.show_request = !$scope.show_request;
		if ($scope.show_request)
			$('a.request').focus();
		else
			$('a.approval').focus();
	};
};]]></client_script>
        <controller_as>c</controller_as>
        <css>//End Phil's Custom CSS&#13;
&#13;
.panel {&#13;
  padding-bottom:0;&#13;
  border: 0px;&#13;
  box-shadow: 0 4px 15px rgba(56, 96, 92, 0.0);&#13;
  margin-top: -12px;&#13;
  margin-bottom: 20px;&#13;
}&#13;
&#13;
.panel-default {&#13;
 	border: 0px;&#13;
}&#13;
&#13;
&#13;
.panel-heading {&#13;
  background-color: #fdfdfd;&#13;
  &#13;
  border-bottom: 0px solid transparent;&#13;
  border-top-right-radius: 0px;&#13;
  border-top-left-radius: 0px;&#13;
}&#13;
&#13;
.nav &gt; li {&#13;
  text-align: center;&#13;
  margin-bottom: 3px;&#13;
  background-color: rgba(56, 96, 92, 0.0);&#13;
}&#13;
&#13;
&#13;
.nav &gt; li &gt; a {&#13;
  transition: all .15s ease-in-out;&#13;
	color: #717171;&#13;
  font-size: 16.8px;&#13;
}&#13;
&#13;
.nav &gt; li &gt; a:hover, .nav &gt; li &gt; a:focus {&#13;
  text-decoration: none;&#13;
  transition: all .15s ease-in-out;&#13;
  background-color: rgba(56, 96, 92, 0.0);&#13;
  border: 1px solid rgba(56, 96, 92, 0.0);&#13;
  //border-bottom: 3px solid #428bca;&#13;
  font-weight: bolder;&#13;
}&#13;
&#13;
.nav &gt; li {&#13;
  background-color: rgba(56, 96, 92, 0.0);&#13;
}&#13;
&#13;
.nav &gt; li:hover {&#13;
  background-color: rgba(56, 96, 92, 0.0);&#13;
}&#13;
&#13;
.nav-tabs &gt; li {&#13;
&#13;
  background-color: rgba(56, 96, 92, 0.0);&#13;
}&#13;
&#13;
.nav-tabs &gt; li &gt; a:hover {&#13;
    //border-color: #428bca;&#13;
  //border: 1px solid rgba(56, 96, 92, 0.0);&#13;
  //background-color: rgba(56, 96, 92, 0.0);&#13;
}&#13;
&#13;
.sc-tab-a {&#13;
 	 //color: $primary;&#13;
   color: #717171;&#13;
  font-size: 16.8px;&#13;
  font-weight: bolder;&#13;
   //border-bottom: 3px solid $primary;&#13;
  	transition: all .15s ease-in-out; &#13;
   font-weight: 700;&#13;
}&#13;
&#13;
.sc-tab-a:hover {&#13;
	transition: all .15s ease-in-out; &#13;
  border-bottom: 3px solid #ffcc5c;&#13;
}&#13;
&#13;
&#13;
.panels-container {&#13;
 	height : 270px;&#13;
  overflow-y : auto;&#13;
    border: 1px solid #ddd;&#13;
  border-radius: 4px;&#13;
  box-shadow: 0 4px 14px rgba(56, 96, 92, 0.08);&#13;
}&#13;
&#13;
#request-link {&#13;
  font-weight: 700;&#13;
}&#13;
&#13;
//End Phil's Custom CSS&#13;
&#13;
&#13;
.sp-approval &gt; .approval-rows {&#13;
  padding: 10px;&#13;
}&#13;
&#13;
//Phil Removed&#13;
/*&#13;
.panels-container {&#13;
 	height : 250px;&#13;
  overflow-y : auto;&#13;
}&#13;
&#13;
.panel {&#13;
  padding-bottom:0;&#13;
}&#13;
*/&#13;
&#13;
.pad-bottom {&#13;
  padding-bottom : 0px;&#13;
}&#13;
&#13;
//Phil Removed&#13;
/*&#13;
.sc-tab-a {&#13;
 	 color: $primary;&#13;
	 border: 0;&#13;
   border-bottom: 3px solid $primary;&#13;
   background-color: transparent;&#13;
}&#13;
*/&#13;
&#13;
.nav &gt; li.item {&#13;
  text-align: center;&#13;
}&#13;
&#13;
&#13;
.list-group-item {&#13;
  border-bottom-width: 0 !important;&#13;
}&#13;
&#13;
/*****Start Left-&gt;Right bottom border style*****/&#13;
.request-slider {&#13;
    position: absolute;&#13;
    display:block;&#13;
    left: 0;&#13;
    top:90%;&#13;
    margin:0 auto;&#13;
    height: 3px;&#13;
    background-color: #206AAA;&#13;
    width: 0%;&#13;
    transition: width .6s ease;&#13;
}&#13;
&#13;
.approval-slider {&#13;
    position: absolute;&#13;
    display:block;&#13;
    left: 0;&#13;
    top:90%;&#13;
    margin:0 auto;&#13;
    height: 3px;&#13;
    background-color: #206AAA;&#13;
    width: 0%;&#13;
    transition: width .6s ease;&#13;
}&#13;
&#13;
#nombore{&#13;
    position:relative;&#13;
    display:inline-block;&#13;
    transition: all 0.3s ease-out;&#13;
}&#13;
#nombore:hover .recent-slider {&#13;
    width: 100%;&#13;
}&#13;
&#13;
#nombore:hover .popular-slider {&#13;
    width: 100%;&#13;
}&#13;
#nombore:hover span {&#13;
      color: #676567;&#13;
}&#13;
&#13;
.active-slider {&#13;
    position: absolute;&#13;
    //display:block;&#13;
    //left: 0;&#13;
    //top:90%;&#13;
    //margin:0 auto;&#13;
    height: 3px;&#13;
    width: 100%;&#13;
    background-color: #206AAA;&#13;
}&#13;
/*****End Left-&gt;Right bottom border style*****/</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>EUTS Requests and Approvals</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	if (input) {
		if (input.op == 'approved' || input.op == 'rejected') {
			var app = new GlideRecord("sysapproval_approver");
			if (app.get(input.target)) {
				app.state = input.op;
				app.update();
			}
		}
	}
	
	function getMyRequestSysIds() {
		var ids = [];
		var rq_filter = new GlideRecord('request_filter');
		rq_filter.addActiveQuery();
		rq_filter.query();
		while(rq_filter.next()) {
			if(rq_filter.table == 'x_opt_euts_intake_restricted_applications'){
var gr_ra = new GlideRecord(rq_filter.table);
gr_ra.addQuery(rq_filter.filter);
gr_ra.query();

while(gr_ra.next())
	ids.push(gr_ra.sys_id + '');

}
			if(rq_filter.table_name && rq_filter.table_name!=null){
			var gr = new GlideRecord(rq_filter.table_name);
			gr.addQuery(rq_filter.filter);
			gr.query();
			while(gr.next())
				ids.push(gr.sys_id + '');
			}	
		}
		return ids;
	}
	
	function getMyApprovalsIds() {
		var u = gs.getUserID();
		var answer = [];
		var i = 0;
		answer[i++] = u + '';
		var g = new GlideRecord("sys_user_delegate");
		g.addQuery("delegate", u);
		g.addQuery("approvals", "true");
		g.addQuery("starts", "<=", gs.daysAgo(0));
		g.addQuery("ends", ">=", gs.daysAgo(0));
		g.query();
		while( g.next())
			answer[i++] = g.user + '';
		return answer;
	}
	
	// retrieve the request's
	var gr = new GlideRecordSecure('task');
	gr.addActiveQuery();
	gr.addQuery('sys_id',getMyRequestSysIds());
	gr.orderByDesc('sys_created_on');
	//gr.chooseWindow(0,11);
	gr.query();
	
	data.request = {};
		
		data.request.req_list = [];
		var recordIdx = 0;
		
		while (gr.next()) {
	
			if (recordIdx == 10)
				break;
			
			var record = {};
				record.sys_id = gr.getValue('sys_id');
				
				if (gr.getRecordClassName() == 'sc_request') {
					var ritm = new GlideRecord("sc_req_item");
					//ritm.addQuery("request", gr.getUniqueValue());		
					ritm.addEncodedQuery('request='+gr.getUniqueValue());

					ritm.query();
					if (ritm.getRowCount() == 0)
						continue;
					if (ritm.getRowCount() > 1)
						record.display_field = gs.getMessage("{0} requested items", ritm.getRowCount());
						else {
							continue;
							/*ritm.next();
							
							record.display_field = ritm.cat_item.getDisplayValue();
							record.url = { id: 'euts_my_requests_details', table: 'sc_req_item', sys_id: ritm.getUniqueValue()};
								record.number = ritm.getValue('number');
							*/
						}
							//record.url = { id: 'sc_request', table: 'sc_request', sys_id: record.sys_id};
								
							}
				else if(gr.getRecordClassName() == 'x_opt_euts_intake_euts_intake_idea'){
					var idea = new GlideRecord("x_opt_euts_intake_euts_intake_idea");
					idea.addQuery("sys_id", gr.getUniqueValue());
					//idea.addQuery("number", gr.getDisplayValue('number'));
					idea.query();
					if(idea.next()){
									record.display_field = "Software Request - " +idea.getDisplayValue('request_type');
								//gr.getDisplayValue('request_type')
								record.url = { id: 'euts_my_requests_details', table: 'x_opt_euts_intake_euts_intake_idea', sys_id: idea.getUniqueValue()};
							}

				}
			
			else if(gr.getRecordClassName() == 'x_opt_euts_intake_restricted_applications'){
				var gr_ra = new GlideRecord("x_opt_euts_intake_restricted_applications");
					gr_ra.addQuery("sys_id", gr.getUniqueValue());
					gr_ra.query();
					if(gr_ra.next()){
									record.display_field = "Restricted Application - " +gr_ra.getDisplayValue('u_application');
								//gr.getDisplayValue('request_type')
								record.url = { id: 'euts_my_requests_details', table: 'x_opt_euts_intake_restricted_applications', sys_id: gr_ra.getUniqueValue()};
							}
			}
			else {
								
								record.display_field = gr.getDisplayValue('short_description');
								//record.display_field = gr.getDisplayValue('number.request_type');
								record.url = { id: 'euts_my_requests_details', table: gr.getRecordClassName(), sys_id: record.sys_id};
			}
						 				
								if(!record.number)
									record.number = gr.getValue('number');
								record.updated_on = gr.getValue('sys_updated_on');
								data.request.req_list.push(record);
								recordIdx++;
							}
							
							if (recordIdx == 10 && gr.isValidRecord())
								data.request.maximum_entries = true;
							data.request.hasAny = data.request.req_list.length > 0 ? true : false;
							// fetch approvals for the user.
							data.approvals = {};
								//data.showApprovals = gs.getUser().hasRole('approver_user');
								data.showApprovals = false;//disable approvals on this page for now.
								// Retreive approvals related to the User.
								if (data.showApprovals) {
									gr = new GlideRecord('sysapproval_approver');
									gr.chooseWindow(0, 10);
									var qc1 = gr.addQuery("state", "requested");
									data.approvals.myApprovals = getMyApprovalsIds();
									gr.addQuery("approver", data.approvals.myApprovals);
									gr.orderBy("sys_created_on");
									gr.query();
									
									var approvalsCount = gr.getRowCount();
									var approvals = [];
									var ids = [];
									
									while (gr.next()) {
										var task = getRecordBeingApproved(gr);
										if (!task.isValidRecord())
											continue;
										
										ids.push(gr.getUniqueValue());
										var t = {};
											t.number = task.getDisplayValue();
											t.short_description = task.short_description.toString();
											if (gr.getValue("approver") != gs.getUserID())
												t.approver = gr.approver.getDisplayValue();
											if (task.isValidField("opened_by") && !task.opened_by.nil())
												t.opened_by = task.opened_by.getDisplayValue();
											// requestor >> opener
											if (task.isValidField("requested_by") && !task.requested_by.nil())
												t.opened_by = task.requested_by.getDisplayValue();
											
											t.start_date = task.getDisplayValue('start_date');
											t.end_date = task.getDisplayValue('end_date');
											t.quantity = task.getDisplayValue('quantity');
											t.table = task.getLabel();
											if (task.getValue("price") > 0)
												t.price = task.getDisplayValue("price");
											
											if (task.getValue("recurring_price") > 0)
												t.recurring_price = task.getDisplayValue("recurring_price");
											
											t.recurring_frequency = task.getDisplayValue("recurring_frequency");
											
											var items = [];
											var idx = 0;
											var itemsGR = new GlideRecord("sc_req_item");
											itemsGR.addQuery("request", task.sys_id);
											itemsGR.query();
											if (itemsGR.getRowCount() > 1)
												t.short_description = itemsGR.getRowCount() + " requested items";
											
											while (itemsGR.next()) {
												var item = {};
													item.short_description = itemsGR.short_description.toString();
													if (itemsGR.getValue("price") > 0)
														item.price = itemsGR.getDisplayValue("price");
													if (itemsGR.getValue("recurring_price") > 0) {
														item.recurring_price = itemsGR.getDisplayValue("recurring_price");
														item.recurring_frequency = itemsGR.getDisplayValue("recurring_frequency");
													}
													if (itemsGR.getRowCount() == 1) {
														item.variables = $sp.getRecordVariablesArray(itemsGR);
														t.short_description = itemsGR.short_description.toString();
													}
													
													items[idx] = item;
													idx++;
												}
												
												var j = {};
													j.sys_id = gr.getUniqueValue();
													j.table = gr.getRecordClassName();
													j.task = t;
													if (task)
														j.variables = $sp.getRecordVariablesArray(task);
													
													j.items = items;
													j.state = gr.getValue("state");
													j.stateLabel = gr.state.getDisplayValue();
													approvals.push(j);
												}
												
												data.approvals.ids = ids;
												data.approvals.approval_list = approvals;
												if (approvals.length > 10)
													data.approvals.show_viewAll = true;
												
												data.approvals.hasAny = approvals.length > 0 ? true : false;
											}
											
											function getRecordBeingApproved(gr) {
												if (!gr.sysapproval.nil())
													return gr.sysapproval.getRefRecord();
												return gr.document_id.getRefRecord();
											}
											
										})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-09-18 13:36:02</sys_created_on>
        <sys_id>cd7e422b2f22301097bc18aa2799b681</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>EUTS Requests and Approvals</sys_name>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="UI">c2cfa3542f43301097bc18aa2799b657</sys_scope>
        <sys_update_name>sp_widget_cd7e422b2f22301097bc18aa2799b681</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-10-03 14:48:52</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default" >
 	<div class="panel-heading pad-bottom">
    	<ul class="nav nav-tabs" style="border-bottom : 0px" role="tablist">
      	<li class="item" role="tab" tabindex="-1" ng-click="changePanel('request')">
        	<a id="nombore" ng-class="{'sc-tab-a' : show_request}" href="javascript:void(0)" class="request">
          	<span> ${My Requests} </span>
            <span class="request-slider active-slider"></span>
          </a>
        </li>  
        <li ng-if = "c.data.approvals.hasAny && c.data.showApprovals" class="item" role="tab" tabindex="-1" ng-click="changePanel('approval')">
        	<a id="nombore" ng-class="{'sc-tab-a' : !show_request}" href="javascript:void(0)" class="approval">
          	<span > ${My Approvals} </span>
            <span id="slider" class="approval-slider"></span>
          </a>
        </li>  
    	</ul>
  </div>
    <!-- Requests Panel -->
  <div ng-if="show_request && c.data.request.hasAny == false " class="panel-body panels-container">
 		${ You do not have any open requests } 
  </div>
 	
  <div ng-if = "show_request && c.data.request.hasAny == true" class="panels-container list-group">
    	<div class="list-group-item row" ng-repeat="item in c.data.request.req_list" style="margin:0px" >
      		<div class="col-xs-3" style="">
            <div>
             <a id="request-link" href="?id={{::item.url.id}}&table={{::item.url.table}}&sys_id={{::item.url.sys_id}}"> {{::item.number}} </a>
             </div>
          <!-- <small class="text-muted">
            	<span> {{::item.display_field}} </span>
           </small> -->  
          </div>
         	<div class="col-xs-6">
             {{::item.display_field}}
          </div>             
         	<div class="col-xs-3">
              <i class="fa fa-clock-o" aria-hidden="true"></i>
              <sn-time-ago timestamp="::item.updated_on"/>
          </div>   
      </div>
    	<div class="col-sm-12" ng-show="c.data.request.maximum_entries" style="padding:15px">
          <a href="?id=euts_my_requests"> <center> ${View All Requests} </center> </a>  
      </div>
  </div>
  
  <!-- Approvals Panel -->
  <div class="panels-container" ng-if = "!show_request">
        <div ng-repeat="approval in data.approvals.approval_list" class="sp-approval">
          <div class="row approval-rows" style="margin:0px">
          <div class="col-sm-9">
            <div ng-if="approval.task.number || approval.task.short_description">
              <a ng-href="?id=approval&table=sysapproval_approver&sys_id={{::approval.sys_id}}" title="{{data.ViewApprovalPageMsg}}">
                <span ng-if="approval.task.number">{{::approval.task.number}}</span>
                <span ng-if="approval.task.number && approval.task.short_description"> - </span>
                <span ng-if="approval.task.short_description">{{::approval.task.short_description}}</span>
              </a>
            </div>
            <div ng-if="approval.task.opened_by"><label>${Requestor}</label> {{::approval.task.opened_by}}</div>
            <div ng-if="approval.task.approver"><label>${Approver}</label> {{::approval.task.approver}}</div>
            <div ng-if="approval.task.start_date"><label>${Start}</label> {{::approval.task.start_date}}</div>
            <div ng-if="approval.task.end_date"><label>${End}</label> {{::approval.task.end_date}}</div>
            <div ng-if="approval.task.quantity"><label>${Quantity}</label> {{::approval.task.quantity}}</div>
            <div ng-if="approval.task.price"><label>${Price}</label> {{::approval.task.price}}
              <span ng-if="approval.task.recurring_price"><label>${Recurring price}</label> {{::approval.task.recurring_price}} {{::approval.task.recurring_frequency}}</span>
            </div>
            <div ng-if="approval.items.length == 1">
              <div ng-repeat="item in approval.items">
                <div ng-if="item.variables.length > 0" ng-init="variable_toggle=false">
                  <a href="javascript:void(0)" ng-click="variable_toggle = !variable_toggle">
                    <span class="glyphicon"
                          ng-class="{'glyphicon-chevron-down': !variable_toggle, 'glyphicon-chevron-up': variable_toggle}">
                    </span>
                    ${Options}
                  </a>
                  <div ng-repeat="variable in item.variables" ng-if="variable_toggle">
                    <label class="text-muted">{{::variable.label}}</label>
                    <div>{{::variable.display_value}}</div>
                  </div>
                </div>
              </div>
            </div>

            <div ng-if="approval.variables.length > 0" ng-init="variable_toggle=false">
              <a href="javascript:void(0)" ng-click="variable_toggle = !variable_toggle">
                <span class="glyphicon"
                      ng-class="{'glyphicon-chevron-down': !variable_toggle, 'glyphicon-chevron-up': variable_toggle}">
                </span>
                ${Options}
              </a>
              <div ng-repeat="variable in approval.variables" ng-if="variable_toggle">
                <label>{{::variable.label}}</label>
                <div>{{::variable.display_value}}</div>
              </div>
            </div>
          </div>

          <div class="col-sm-3">
            <button name="approve" ng-if="approval.state == 'requested'" class="btn btn-primary btn-block" style="border-width:1px;" ng-click="approve(approval.sys_id);">${Approve}</button>
            <button name="reject" ng-if="approval.state == 'requested'" class="btn btn-default btn-block" ng-click="reject(approval.sys_id);">${Reject}</button>
          </div>
        </div>
       </div>
  			<div class="col-sm-12" ng-show="c.data.approvals.show_viewAll" style="padding:15px">
          <a href="?id=approvals"> <center> ${View All Approvals} </center> </a>  
        </div>
  </div>
  
</div>]]></template>
    </sp_widget>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="UI">c2cfa3542f43301097bc18aa2799b657</claim_owner_scope>
        <claim_timestamp>17c46a10fca0000001</claim_timestamp>
        <metadata_update_name>sp_widget_cd7e422b2f22301097bc18aa2799b681</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>UI</previous_claim_name>
        <previous_claim_scope>c2cfa3542f43301097bc18aa2799b657</previous_claim_scope>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-10-03 14:48:52</sys_created_on>
        <sys_id>e2507b542f43301097bc18aa2799b630</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-10-03 14:48:52</sys_updated_on>
    </sys_claim>
</record_update>
